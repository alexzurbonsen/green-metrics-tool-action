name: 'GMT'
description: 'Set up Green Metrics Tool for measurement'
inputs:
  metrics-to-turn-off:
    description: 'a list of metrics to turn off that is passed to the disable metrics script'
    required: false
    default: ''
  usage-scenario-relativ-path:
    description: 'The path of the directory containing the usage_scenario.yml file (Note, that the suffix has to be .yml). Relative to the repo root. With trailing slash, e.g. path/to/usage_scenario_dir/'
    required: true
  measurement-name:
    description: 'The name of the measurement'
    required: false
    default: 'measurement_1'
  github-token:
    description: 'pass in your secrets.GITHUB_TOKEN'
    required: true
outputs:
  internal-run-id:
    description: 'Dummy Output. Url for the results of the measurement.'
    value: ${{ steps.run_usage_scenario.output }}

runs:
  using: 'composite'
  steps:
    - name: Check OS
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title={Wrong OS on Runner}::{Action must be run on Linux but is run on ${{ runner.os }}.}" && exit 1

    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        path: 'repo-to-measure'

#    - name: Check usage_scenario exists
#      shell: bash
#      working-directory: 'repo-to-measure'
#      run: |
#        [[ -f ${{ inputs.usage-scenario-relativ-path }}usage_scenario.yml ]] || \
#        ( echo "::error title={Not found: usage_scenario.yml}::{'No usage_scenario.yml found in ${{ inputs.usage-scenario-relativ-path }}'}" && exit 1 )

    - name: Checkout GMT Repo
      uses: actions/checkout@v4
      with:
        path: 'green-metrics-tool'
        repository: 'green-coding-berlin/green-metrics-tool'
        ref: 'v0.20.2'

    - name: Setup Python
      id: setup_python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache Python Dependencies
      id: python_cache
      uses: actions/cache@v3
      with:
        path: green-metrics-tool/venv
        key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}-${{ hashFiles('metric_providers/psu/energy/ac/xgboost/machine/model/requirements.txt') }}

    - name: Install GMT
      shell: bash
      working-directory: 'green-metrics-tool'
      run: |
        ./install_linux.sh -p testpw -a http://api.green-coding.internal:9142 -m http://metrics.green-coding.internal:9142 -t -i -s
        source venv/bin/activate
        python3 -m pip install -r requirements-dev.txt
        python3 -m pip install -r metric_providers/psu/energy/ac/xgboost/machine/model/requirements.txt
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV

    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Build GMT
      uses: docker/bake-action@v4
      with:
        workdir: green-metrics-tool/docker
        file: docker-compose-cache.json
        target: compose.yml

    - name: Sleep for 10 seconds
      run: sleep 10s
      shell: bash

#    - name: disable unneeded metric providers
#      shell: bash
#      run: |
#        python3 disable_metric_providers.py ${{ inputs.metrics-to-turn-off }}

    - name: Run GMT
      working-directory: 'green-metrics-tool/docker'
      shell: bash
      run: docker compose up --detach

    # hard code example from GMT for now
    - name: Install stress-ng
      shell: bash
      run: |
        sudo apt update -y
        sudo apt install -y stress-ng

    - name: Run Usage Scenario
      id: run_usage_scenario
      working-directory: 'green-metrics-tool'
      shell: bash
      run: |
        ./runner.py --name "${{ inputs.measurement-name }}" --uri $(pwd)/tests/stress-application \
        | grep -oP 'Please access your report on the URL \K.*' >> $GITHUB_OUTPUT

#    - name: Run Usage Scenario
#      id: run_usage_scenario
#      working-directory: 'green-metrics-tool'
#      shell: bash
#      run: |
#        ./runner.py --name "${{ inputs.measurement-name }}" --uri ${{ github.workspace }}/repo-to-test/${{ inputs.usage-scenario-relativ-path }} \
#        | grep -oP 'Please access your report on the URL \K.*' >> $GITHUB_OUTPUT

    - name: Shut down GMT
      working-directory: 'green-metrics-tool/docker'
      shell: bash
      run: docker compose down
